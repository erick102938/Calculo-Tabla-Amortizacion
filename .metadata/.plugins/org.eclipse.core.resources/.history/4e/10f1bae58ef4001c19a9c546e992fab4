
import java.util.ArrayList;

import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;

import org.apache.logging.log4j.core.parser.ParseException;

import com.cmc.rest.commons.ArchivoException;
import com.cmc.rest.commons.ValidationException;
import com.cmc.rest.entidades.Persona;
import com.cmc.rest.servicios.ServicioClientes;
import com.cmc.rest.servicios.ServicioPersonas;

@Path("/personas")
public class PersonaRest {
	
	@Path("/cambiar")
	@POST
	@Consumes(MediaType.APPLICATION_JSON)
	@Produces(MediaType.APPLICATION_JSON)
	public static javax.ws.rs.core.Response modificar(Persona persona)throws ValidationException, ParseException{
		System.out.print(persona);
		Persona personaMayusculas;
		personaMayusculas = ServicioPersonas.actualizar(persona);
		return javax.ws.rs.core.Response.status(200).entity(personaMayusculas).build();
	}
	@Path("/consultarPersonas")
	@POST
	@Produces(MediaType.APPLICATION_JSON)
	public static javax.ws.rs.core.Response modificar()throws ArchivoException, NumberFormatException, ValidationException, ParseException, java.text.ParseException{
		ArrayList<Persona> personas;
		try {
			personas = ServicioClientes.leer();
			return javax.ws.rs.core.Response.status(200).entity(personas).build();
		} catch (ArchivoException e) {
			return javax.ws.rs.core.Response.status(200).entity(e).build();
		}
	}
	@Path("/buscar")
	@GET
	@Consumes(MediaType.APPLICATION_JSON)
	@Produces(MediaType.APPLICATION_JSON)
	public static javax.ws.rs.core.Response buscarPorCedula(Object cedula) throws NumberFormatException, ValidationException, ParseException, ArchivoException, java.text.ParseException{
		String c = cedula.toString();
		System.out.print("la persona es: "+c.substring(c.length() - 11,c.length() - 1));
		Persona persona = ServicioPersonas.buscarPorCedula(c.substring(c.length() - 11,c.length() - 1));
		if(persona!=null){
			return javax.ws.rs.core.Response.status(200).entity(persona).build();
		}else{
			return javax.ws.rs.core.Response.status(200).entity(null).build();
		}
	}
	@Path("/agregar")
	@POST
	@Produces(MediaType.APPLICATION_JSON)
	public static javax.ws.rs.core.Response agregarPersona(Persona persona)throws ArchivoException, NumberFormatException, ValidationException, ParseException, java.text.ParseException{
		try {
			ServicioClientes.agregar(persona);
			return javax.ws.rs.core.Response.status(200).entity(persona).build();
		} catch (ArchivoException e) {
			return javax.ws.rs.core.Response.status(200).entity(e).build();
		}
	}
}
